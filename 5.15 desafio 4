class Nodo:
    """Clase que representa un nodo en el árbol de búsqueda binaria."""
    def __init__(self, valor):
        self.valor = valor
        self.izquierda = None
        self.derecha = None

class ABB:
    """Clase para construir y operar un árbol de búsqueda binaria."""
    
    def __init__(self):
        self.raiz = None
    
    def insertar(self, valor):
        """Inserta un valor en el árbol de búsqueda binaria."""
        if self.raiz is None:
            self.raiz = Nodo(valor)
        else:
            self._insertar_recursivo(self.raiz, valor)
    
    def _insertar_recursivo(self, nodo, valor):
        """Método recursivo para insertar un valor en el lugar adecuado."""
        if valor < nodo.valor:
            if nodo.izquierda is None:
                nodo.izquierda = Nodo(valor)
            else:
                self._insertar_recursivo(nodo.izquierda, valor)
        elif valor > nodo.valor:
            if nodo.derecha is None:
                nodo.derecha = Nodo(valor)
            else:
                self._insertar_recursivo(nodo.derecha, valor)
    
    def buscar(self, valor):
        """Busca un valor en el árbol de búsqueda binaria."""
        return self._buscar_recursivo(self.raiz, valor)
    
    def _buscar_recursivo(self, nodo, valor):
        """Método recursivo para buscar un valor en el árbol."""
        if nodo is None:
            return False
        if valor == nodo.valor:
            return True
        elif valor < nodo.valor:
            return self._buscar_recursivo(nodo.izquierda, valor)
        else:
            return self._buscar_recursivo(nodo.derecha, valor)

# Ejemplo de uso
conjunto_numeros = [10, 5, 20, 3, 7, 15, 30]
arbol = ABB()
for numero in conjunto_numeros:
    arbol.insertar(numero)

# Búsqueda de valores
print(arbol.buscar(7))  # Salida: True
print(arbol.buscar(25)) # Salida: False
